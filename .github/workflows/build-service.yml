name: koodisto-service
on:
  workflow_dispatch:
  push:
    branches: [ master, spring_boot ]
  pull_request:
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12.17
        ports:
          - 5435:5432
        env:
          POSTGRES_USER: app
          POSTGRES_DB: koodisto
          POSTGRES_PASSWORD: koodisto
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: 'maven'
      - name: Maven version
        run: mvn --version
      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn clean package -B -Dbranch=$GITHUB_REF_NAME -Drevision=$GITHUB_SHA -DbuildNumber=$GITHUB_RUN_NUMBER/$GITHUB_RUN_ATTEMPT
      - name: Upload koodisto-service-jar
        uses: actions/upload-artifact@v3
        with:
          name: koodisto-service-jar
          path: koodisto-service/target/koodisto-service.jar
  sonarcloud:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12.17
        ports:
          - 5435:5432
        env:
          POSTGRES_USER: app
          POSTGRES_DB: koodisto
          POSTGRES_PASSWORD: koodisto
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: 'maven'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Opetushallitus_koodisto
  deploy-container:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Download koodisto-service-jar
        uses: actions/download-artifact@v3
        with:
          name: koodisto-service-jar
      - name: Build Docker Conainer
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          git clone https://github.com/Opetushallitus/ci-tools.git
          source ci-tools/common/setup-tools.sh
          export BASE_IMAGE="baseimage-fatjar-openjdk21:master"
          export ARTIFACT_NAME="koodisto"
          cp koodisto-service.jar $DOCKER_BUILD_DIR/artifact/koodisto.jar
          cp -vr src/main/resources/oph-configuration $DOCKER_BUILD_DIR/config/
          ./ci-tools/common/pull-image.sh
          ./ci-tools/github-build/build-fatjar.sh $ARTIFACT_NAME
          ./ci-tools/github-build/upload-image.sh $ARTIFACT_NAME
  deploy-artifacts:
    needs: [build]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: 'maven'
      - name: Maven version
        run: mvn --version
      - name: Deploy
        env:
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: |
          git clone https://github.com/Opetushallitus/ci-tools.git
          source ci-tools/common/setup-tools.sh
          mvn deploy -pl fi.vm.sade.koodisto:koodisto,koodisto-api -am -DskipTests --settings ci-tools/common/maven-settings.xml
